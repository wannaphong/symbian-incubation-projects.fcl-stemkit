/*
* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description:
* Command list for USB Watcher component.
*
*/

#include <ssm/conditionresourcetypes.rh>
#include <ssm/ssmcmd.rh>

#include "ssmsubstateext.hrh"

// Identify command list type
UID2 KUidSsmCommandListResourceFile

// ---------------------------------------------------------------------------
// r_entry_point
// This must be the first resource
// ---------------------------------------------------------------------------
//
RESOURCE SSM_COMMAND_LIST_ROOT r_entry_point
    {
    command_list_mapping = r_map;
    }

// ---------------------------------------------------------------------------
// r_map
// Mapping of command list ids to resource ids.
// ---------------------------------------------------------------------------
//
RESOURCE SSM_COMMAND_LIST_MAPPING r_map
    {
    mappings =
        {
        SSM_COMMANDLISTID_TO_RESOURCEID
            {
            command_list_id = ESsmStateCharging;
            resource_id = r_cmds_charging;
            },
        SSM_COMMANDLISTID_TO_RESOURCEID
            {
            command_list_id = ESsmStateNonCritical;
            resource_id = r_cmds_noncritical;
            }
        };
    }

// ---------------------------------------------------------------------------
// r_cmds_noncritical
// ---------------------------------------------------------------------------
//
RESOURCE SSM_COMMAND_LIST r_cmds_noncritical
    {
    commands =
        {
        r_cmd_usbwatcher
        };
    }

RESOURCE SSM_COMMAND_LIST r_cmds_charging
    {
    commands =
        {
#ifdef RD_USB_CHARGING
        r_cmd_usbwatcher
#endif //RD_USB_CHARGING
        };
    }

// ---------------------------------------------------------------------------
// r_cmd_usbwatcher
// ---------------------------------------------------------------------------
//
RESOURCE SSM_START_PROCESS_INFO r_cmd_usbwatcher
    {
    priority = 0xFFA7; // Same priority can be used in both states
    name = "z:\\sys\\bin\\usbwatcher.exe";
    execution_behaviour = ESsmFireAndForget;
    conditional_information = r_cond_feat_usb;
    monitor_info = r_mon_3_restarts_ignore;
    }

// ---------------------------------------------------------------------------
// r_cond_feat_usb
// ---------------------------------------------------------------------------
//
RESOURCE SSM_CND_FEATURE_VALUE r_cond_feat_usb
    {
    feature_id = KFeatureIdUsb;
    }

// monitoring.rss contains resource definitions, so it may not be included
// before entry point.
#include "stem_monitoring.rss"
